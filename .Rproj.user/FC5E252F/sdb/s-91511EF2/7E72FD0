{
    "contents" : "################################################################################\n#                                                                              #\n#  Data visualization code for the APM teaser analysis                         #\n#                                                                              #\n################################################################################\n\n### Preliminary Commands -------------------------------------------------------\n\n ## Load Libraries\n\n  library(plyr)\n  library(dplyr)\n  library(ggplot2)\n  library(reshape2)\n  library(stringr)\n  library(maptools)\n  library(sp)\n\n ## Source Files\n\n  # File containing function for working with prr and APM data\n  source(paste0('https://raw.githubusercontent.com/andykrause/ausPropMrkt/',\n              'master/prrFunctions.R'))\n\n  source(paste0('https://raw.githubusercontent.com/andykrause/',\n                'dataAnalysisTools/master/stShardFunctions.R'))\n\n ## Set the path to the data\n\n  dataPath <- \"C:/Dropbox/Australia Data/ausPropData/melData/\"\n\n### Load the data --------------------------------------------------------------\n  \n  load(paste0(dataPath, 'cleanData.RData'))\n  load(paste0(dataPath, 'analysisResults.rData'))\n\n### Create a custom plotting theme ---------------------------------------------\n  \n  theme_mry <- theme_grey() +\n    theme(text = element_text(size=9),\n          panel.background = element_rect(colour='black', fill='black'),\n          panel.grid.major=element_line(colour='gray20'),\n          panel.grid.minor=element_line(colour='gray20'),\n          plot.background=element_rect(fill='gray10'),\n          axis.title.y=element_text(colour='white'),\n          axis.text.y=element_text(hjust=1),\n          legend.position='bottom',\n          legend.background=element_rect(fill='gray10'),\n          legend.key=element_rect(fill='gray10', color='gray10'),\n          legend.text=element_text(color='white'),\n          legend.title=element_blank())\n  \n################################################################################  \n### Visualize Results ----------------------------------------------------------  \n\n### Entire Metro Region --------------------------------------------------------\n  \n ## Build data\n  \n  # Median Method\n  mmMetro <- mmMetYields[ ,c('timeName', 'yield')]\n  mmMetro$Method  <- 'Median Method'\n  \n  # Cross Regression Method\n  crMetro <- crMetYields[[4]][ ,c('timeName', 'median')]\n  crMetro$Method  <- 'Cross Regression'\n  names(crMetro)[names(crMetro) == 'median'] <- 'yield'\n  \n  # Direct Match\n  dmMetro <- dmMetYields[[4]][ ,c('timeName', 'median')]\n  dmMetro$Method  <- 'Direct Match'\n  names(dmMetro)[names(dmMetro) == 'median'] <- 'yield'\n  \n  # Combine\n  metro <- rbind(mmMetro, crMetro, dmMetro)\n  \n ## Make Plot with Direct match\n  \n  metroPlot_DM <- ggplot(metro, aes(x=as.numeric(timeName), y=yield, \n                                      group=Method)) + \n                  geom_line(aes(colour=Method, size=Method, linetype=Method)) +\n                  scale_size_manual(values=c(1,1, 1)) +\n                  scale_colour_manual(values=c('orange', 'green', 'gray60')) +\n                  scale_linetype_manual(values=c(1,3, 3)) + \n                  xlab(\"\") + ylab(\"Rental Yield\\n\") +\n                  scale_x_continuous(breaks=seq(2, 18, 4), labels=2011:2015) +\n                  scale_y_continuous(limits=c(.032, .048),\n                         breaks=seq(.032, .048, .001), \n                         labels=paste0(format(100*(seq(.032, .048, .001)),\n                                              nsmall=1), \"%\")) +\n                  theme_mry\n  \n\n ## Export Plot\n \n  png(height=1200, width=2400, filename=\"c:/temp/metro_dm.png\", type=\"cairo\",\n      res=300)\n    print(metroPlot_DM)\n  dev.off()\n  \n  ## Make Plot without Direct match\n  \n  metroPlot <- ggplot(metro[1:40,], aes(x=as.numeric(timeName), y=yield, \n                                    group=Method)) + \n               geom_line(aes(colour=Method, size=Method, linetype=Method)) +\n               scale_size_manual(values=c(1,1)) +\n               scale_colour_manual(values=c('orange', 'gray60')) +\n               scale_linetype_manual(values=c(1,3)) + \n               xlab(\"\") + ylab(\"Rental Yield\\n\") + \n               scale_x_continuous(breaks=seq(2, 18, 4), labels=2011:2015) +\n               scale_y_continuous(limits=c(.032, .048),\n                                  breaks=seq(.032, .048, .001), \n                                  labels=paste0(format(100*(seq(.032, .048, .001)),\n                                                nsmall=1), \"%\")) +\n               theme_mry\n  \n  \n  ## Export Plot\n  \n  png(height=1200, width=2400, filename=\"c:/temp/metro.png\", type=\"cairo\",\n      res=300)\n  print(metroPlot)\n  dev.off()\n\n### Compare metro prices and rents ---------------------------------------------  \n  \n  ## Create cr simple price and rent values\n  \n  crMetroPrice <- spaceTimeShard(xTrans,\n                                 metric='price',\n                                 spaceField='all', \n                                 timeField = 'transQtr',\n                                 defDim='time',\n                                 stsLimit=1,\n                                 calcs=list(median='median'))\n  \n  crMetroRent <- spaceTimeShard(xTrans,\n                                metric='rent',\n                                spaceField='all', \n                                timeField = 'transQtr',\n                                defDim='time',\n                                stsLimit=1,\n                                calcs=list(median='median'))\n  \n ## Combine into tidy data frame\n  \n  prComp <- data.frame(time = rep(1:20, 4),\n                       method = c(rep('Cross Regression', 40),\n                                  rep('Median Method', 40)),\n                       type = c(rep('Prices', 20), rep('Rents', 20),\n                                rep('Prices', 20), rep('Rents', 20)),\n                       value = c(crMetroPrice[[2]]$median / \n                                   crMetroPrice[[2]]$median[1],\n                                 crMetroRent[[2]]$median / \n                                   crMetroRent[[2]]$median[1],\n                                 mmMetroSale[[2]]$median / \n                                   mmMetroSale[[2]]$median[1],\n                                 mmMetroRent[[2]]$median / \n                                   mmMetroRent[[2]]$median[1]))\n  prComp$value <- prComp$value * 100\n  \n  \n ## Make Plot\n  \n  prPlot <- ggplot(prComp, aes(x=as.numeric(time), y=value, \n                        group=method)) + \n    geom_line(aes(colour=method, size=method, linetype=method)) +\n    scale_size_manual(values=c(1,1)) +\n    scale_colour_manual(values=c('orange', 'gray60')) +\n    scale_linetype_manual(values=c(1,3)) + \n    xlab(\"\") + ylab(\"Price and Rent Index (June 2010 = 100)\\n\") +\n    scale_x_continuous(breaks=seq(2, 18, 4), labels=2011:2015) +\n    scale_y_continuous(limits=c(84, 124),\n                       breaks=seq(84, 124, 4)) +\n    theme_mry +\n    facet_wrap(~type)\n    \n ## Export Plot\n  \n  png(height=1200, width=2400, filename=\"c:/temp/price_v_rent.png\", \n      type=\"cairo\",\n      res=300)\n  print(prPlot)\n  dev.off()\n\n### Metro by Use ---------------------------------------------------------------  \n  \n ## Extra cross reg values\n\n  crMetroUse <- globBUQ$tidyPRR\n  crMetroUse$value <- 1 / globBUQ$tidyPRR$value\n  crMetroUse$method <- 'Cross Regression'\n  crMetroUse$type <- c(rep(\"Houses\", 20), rep('Units', 20))\n  \n  \n ## Creat the basic median value methods  \n  \n  mmMetroUHSale <- spaceTimeShard(allTrans[allTrans$transType == 'sale' &\n                                           allTrans$PropertyType == 'House', ],\n                                  metric='transValue',\n                                  spaceField='all', \n                                  timeField = 'transQtr',\n                                  defDim='time',\n                                  stsLimit=1,\n                                  calcs=list(median='median'))\n  \n  mmMetroUUSale <- spaceTimeShard(allTrans[allTrans$transType == 'sale' &\n                                           allTrans$PropertyType == 'Unit', ],\n                                  metric='transValue',\n                                  spaceField='all', \n                                  timeField = 'transQtr',\n                                  defDim='time',\n                                  stsLimit=1,\n                                  calcs=list(median='median'))\n  \n  mmMetroUHRent <- spaceTimeShard(allTrans[allTrans$transType == 'rent' &\n                                           allTrans$PropertyType == 'House', ],\n                                  metric='transValue',\n                                  spaceField='all', \n                                  timeField = 'transQtr',\n                                  defDim='time',\n                                  stsLimit=1,\n                                  calcs=list(median='median'))\n  \n  mmMetroUURent <- spaceTimeShard(allTrans[allTrans$transType == 'rent' &\n                                           allTrans$PropertyType == 'Unit', ],\n                                  metric='transValue',\n                                  spaceField='all', \n                                  timeField = 'transQtr',\n                                  defDim='time',\n                                  stsLimit=1,\n                                  calcs=list(median='median'))\n  \n  # Conver to tidy data frame\n  mmMetroUH <- 1 / (mmMetroUHSale[[2]]$median /\n                      (52 * mmMetroUHRent[[2]]$median))\n  mmMetroUU <- 1 / (mmMetroUUSale[[2]]$median /\n                      (52 * mmMetroUURent[[2]]$median))\n  \n  mmMetroUse <- data.frame(method = 'Median Method',\n                           type = c(rep(\"Houses\", 20), rep('Units', 20)),\n                           time = rep(1:20, 2),\n                           variable = 'prr',\n                           value = as.numeric(c(mmMetroUH, mmMetroUU)))\n                        \n  # Combine\n  metroUse <- rbind(crMetroUse[1:20,],\n                    mmMetroUse[1:20,],\n                    crMetroUse[21:40,],\n                    mmMetroUse[21:40,])\n  metroUse$colInd <- c(rep(\"Houses - Cross Regression\",20),\n                       rep(\"Houses - Median Method           \",20),\n                       rep(\"Units - Cross Regression\",20), \n                       rep(\"Units - Median Method\",20))\n\n ## Combine datasets\n  \n  usePlot <- ggplot(metroUse, aes(x=as.numeric(time), y=value, \n                               group=method)) + \n    geom_line(aes(colour=colInd, size=colInd, linetype=colInd)) +\n    scale_size_manual(values=c(1,1,1,1)) +\n    scale_colour_manual(values=c('red', 'gray60', 'yellow', 'gray60')) +\n    scale_linetype_manual(values=c(1,3,1,3)) + \n    xlab(\"\") + ylab(\"Rental Yield\\n\") +\n    scale_x_continuous(breaks=seq(2, 18, 4), labels=2011:2015) +\n    scale_y_continuous(limits=c(.03, .048),\n                       breaks=seq(.03, .048, .002), \n                       labels=paste0(format(100*(seq(.03, .048, .002)),\n                                            nsmall=1), \"%\")) +\n    theme_mry +\n    facet_wrap(~type)\n  usePlot\n  \n## Export Plot\n  \n  png(height=1200, width=2400, filename=\"c:/temp/byUse.png\", \n      type=\"cairo\",\n      res=300)\n  print(usePlot)\n  dev.off()\n \n### Rental Yield Variation \n  \n  png(height=1200, width=2400, filename=\"c:/temp/roiVariation.png\", \n      type=\"cairo\",\n      res=300)\n  print(geoCompPlot(subQ, globQ, 'suburb', 'transQtr'))\n  dev.off()\n \n  prrMean <- function(x) mean(x$tidyPRR$value)\n  subMean <- unlist(lapply(subQ, prrMean))\n  bot3 <- order(subMean, decreasing=T)[3:1]\n  top3 <- order(subMean)[1:3]\n  all6 <- c(top3, bot3)\n  sub6 <- subQ[all6]\n  sub6DF <- rbind.fill(prrTidyToDF(sub6))\n  sub6DF$type <- NULL\n  sub6DF$variable <- NULL\n  sub6DF$geoName <- factor(sub6DF$geoName, levels=names(subQ)[all6])\n  sub6Tidy <- melt(sub6DF)\n  sub6Tidy$value <- 1/sub6Tidy$value\n\n  suburbPlot <- ggplot(sub6Tidy, aes(x=as.numeric(time), y=value, group=geoName,\n                       colour=geoName)) + \n                       geom_line(size=1) +\n                       scale_colour_manual(values=c('blue', 'royalblue' , \n                                                    'cadetblue', 'indianred1',\n                                                    'red', 'darkred')) + \n                       xlab(\"\") +  ylab(\"Rental Yield\\n\") +\n                       scale_y_continuous(limits=c(.02, .07),\n                                          breaks=seq(.02, .07, .01), \n                                          labels=paste0(format(100*(\n                                                          seq(.02, .07, .01)),\n                                                        nsmall=1), \"%\")) +\n                       scale_x_continuous(breaks=seq(2,18,4), \n                                          labels=2011:2015) +\n                       facet_wrap(~geoName) + \n                       theme_mry +\n                           theme(strip.text.x = element_text(size = 10))\n                                 \n  png(height=1200, width=2400, filename=\"c:/temp/topSuburbs.png\", \n      type=\"cairo\",\n      res=300)\n  print(suburbPlot)\n  dev.off()\n  \n  \n### By Bedrooms ----------------------------------------------------------------\n  \n  # By Use\n  crMetHB1 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'House' &\n                                         xTrans$Bedrooms == 1, ],\n                                 metric=c('yield'),\n                                 spaceField='all', timeField='transQtr',\n                                 defDim='time', stsLimit=3, \n                                 calcs=list(median='median'))\n  \n  crMetHB2 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'House' &\n                                      xTrans$Bedrooms == 2, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetHB3 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'House' &\n                                      xTrans$Bedrooms == 3, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetHB4 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'House' &\n                                      xTrans$Bedrooms == 4, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetHB5 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'House' &\n                                      xTrans$Bedrooms >= 5, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetUB1 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'Unit' &\n                                      xTrans$Bedrooms == 1, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetUB2 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'Unit' &\n                                      xTrans$Bedrooms == 2, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n  crMetUB3 <- spaceTimeShard(xTrans[xTrans$PropertyType == 'Unit' &\n                                      xTrans$Bedrooms >= 3, ],\n                             metric=c('yield'),\n                             spaceField='all', timeField='transQtr',\n                             defDim='time', stsLimit=3, \n                             calcs=list(median='median'))\n  \n ##\n  crHB1 <- crMetHB1[[4]][,c('timeName', 'median')]\n  names(crHB1)[2] <- 'yield'\n  crHB1$Use <- 'House'\n  crHB1$Beds <- '1 Bed  '\n  \n  crHB2 <- crMetHB2[[4]][,c('timeName', 'median')]\n  names(crHB2)[2] <- 'yield'\n  crHB2$Use <- 'House'\n  crHB2$Beds <- '2 Beds  '\n  \n  crHB3 <- crMetHB3[[4]][,c('timeName', 'median')]\n  names(crHB3)[2] <- 'yield'\n  crHB3$Use <- 'House'\n  crHB3$Beds <- '3 Beds  '\n  \n  crHB4 <- crMetHB4[[4]][,c('timeName', 'median')]\n  names(crHB4)[2] <- 'yield'\n  crHB4$Use <- 'House'\n  crHB4$Beds <- '4 Beds  '\n  \n  crHB5 <- crMetHB5[[4]][,c('timeName', 'median')]\n  names(crHB5)[2] <- 'yield'\n  crHB5$Use <- 'House'\n  crHB5$Beds <- '5+ Beds  '\n  \n  crUB1 <- crMetUB1[[4]][,c('timeName', 'median')]\n  names(crUB1)[2] <- 'yield'\n  crUB1$Use <- 'Unit'\n  crUB1$Beds <- '1 Bed  '\n  \n  crUB2 <- crMetUB2[[4]][,c('timeName', 'median')]\n  names(crUB2)[2] <- 'yield'\n  crUB2$Use <- 'Unit'\n  crUB2$Beds <- '2 Beds  '\n  \n  crUB3 <- crMetUB3[[4]][,c('timeName', 'median')]\n  names(crUB3)[2] <- 'yield'\n  crUB3$Use <- 'Unit'\n  crUB3$Beds <- '3 Beds  '\n  \n  crBeds <- rbind(crHB1, crHB2, crHB3, crHB4, crHB5, crUB1, crUB2, crUB3)\n  \n  bedPlot <- ggplot(crBeds, aes(x=as.numeric(timeName), y=yield, \n                                  group=as.factor(Beds))) + \n    geom_line(aes(colour=as.factor(Beds))) +\n    scale_colour_manual(values=c('red', 'orange', 'green', 'blue', 'purple')) +\n    xlab(\"\") + ylab(\"Rental Yield\\n\") +\n    scale_x_continuous(breaks=seq(2, 18, 4), labels=2011:2015) +\n    scale_y_continuous(limits=c(.03, .048),\n                       breaks=seq(.03, .048, .002), \n                       labels=paste0(format(100*(seq(.03, .048, .002)),\n                                            nsmall=1), \"%\")) +\n    theme_mry +\n    facet_wrap(~Use)\n  bedPlot\n  \n  png(height=1200, width=2400, filename=\"c:/temp/byBedroom.png\", \n      type=\"cairo\",\n      res=300)\n  print(bedPlot)\n  dev.off()\n  ",
    "created" : 1456289384590.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3482200235",
    "id" : "7E72FD0",
    "lastKnownWriteTime" : 1447193345,
    "path" : "~/Documents/R_Workspace/ausPropMrkt/ausProperty_teaser/teaserVisualization.R",
    "project_path" : "ausProperty_teaser/teaserVisualization.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}