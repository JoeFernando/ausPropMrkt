{
    "contents" : "################################################################################\n#                                                                              #\n#  Data Analysis Code for the Price to Rent Ratio Model comparison Study       #\n#                                                                              #\n################################################################################\n\n### Preliminary Commands -------------------------------------------------------\n\n  ## Set parameters\n\n  reBuildData <- FALSE     # Enter TRUE if you wish to rebuild data from raw\n  testCRMSens <- FALSE     # Test the sensitivity of the result to alternate\n                             # regression models?\n  ## Load Libraries\n\n  library(plyr)\n  library(dplyr)\n  library(ggplot2)\n  library(reshape2)\n  library(stringr)\n  library(maptools)\n  library(sp)\n\n ## Source Files\n\n  # File containing function for working with prr and APM data\n  source('/Users/gaschwanden/Documents/R_Workspace/ausPropMrkt/prrFunctions.R')\n\n ## Set the path to the data\n\n  dataPath <- \"/Users/gaschwanden/Documents/R_Workspace/ausPropMrkt\"\n  subGeoFile <- 'Vic_Suburbs.shp'\n  lgaGeoFile <- 'Vic_LGAs.shp'\n  sla1GeoFile <- 'Vic_SLA1.shp'\n  postGeoFile <- 'Vic_PostCodes.shp'\n\n### Read in and prepare data ---------------------------------------------------------------\n  \n ## Read in transaction Data  \n  \n  # Conditional depending on reBuild\n  if(reBuildData){\n    source(paste0('/Users/gaschwanden/Documents/R_Workspace/ausPropMrkt/prmcDataPrep.R'))\n  } else {\n    load(paste0(dataPath, 'prrWrkspc.RData'))\n  }\n  \n### Cross regression comparison method -----------------------------------------\n\n ## Set the specification (formula)\n\n regSpec <- log(transValue) ~ log(AreaSize) + Bedrooms + Baths + \n    as.factor(postCode) + as.factor(transQtr) + ssInteg + ssChoice\n\n ## Estimate models and make new predictions: Global by Use\n\n  # For houses\n  houseResults <- prrCrossReg(regSpec, \n                            subset(allTrans, transType == 'sale' &\n                                             PropertyType == 'House' & \n                                             YT_house_postCode == 1),\n                            subset(allTrans, transType == 'rent' &\n                                             PropertyType == 'House' & \n                                             YT_house_postCode == 1),\n                            verbose=TRUE)\n  \n  # For Units\n  unitResults <- prrCrossReg(regSpec, \n                           subset(allTrans, transType == 'sale' &\n                                    PropertyType == 'Unit' & \n                                    YT_unit_postCode == 1),\n                           subset(allTrans, transType == 'rent' &\n                                    PropertyType == 'Unit' & \n                                    YT_unit_postCode == 1),\n                           verbose=TRUE)\n\n ## Calculate the ratio\n\n  # Extract vales\n  crmValues <- rbind(houseResults$results, unitResults$results)\n\n  # Calculate the ratio\n  crmValues$prRatio <- crmValues$Price / (crmValues$Rent * 52)\n  crmValues$yield <- 1/crmValues$prRatio\n  \n ## Calculate sensitivity to the model\n  \n if(testCRMSens){\n  \n  # Specify two alternative models\n  \n  altSpec1 <- log(transValue) ~ Bedrooms + ssInteg + ssChoice +\n     as.factor(transMonth) \n  \n  altSpec2 <- log(transValue) ~ log(AreaSize) + Bedrooms + Baths + \n    HasPool + HasGarage + HasAirConditioning + HasFireplace +\n    as.factor(postCode) + as.factor(transMonth) \n  \n  # For houses\n  houseResultsA1 <- prrCrossReg(altSpec1, \n                              subset(allTrans, transType == 'sale' &\n                                       PropertyType == 'House' & \n                                       YT_house_postCode == 1),\n                              subset(allTrans, transType == 'rent' &\n                                       PropertyType == 'House' & \n                                       YT_house_postCode == 1),\n                              verbose=TRUE)\n  houseResultsA2 <- prrCrossReg(altSpec2, \n                              subset(allTrans, transType == 'sale' &\n                                       PropertyType == 'House' & \n                                       YT_house_postCode == 1),\n                              subset(allTrans, transType == 'rent' &\n                                       PropertyType == 'House' & \n                                       YT_house_postCode == 1),\n                              verbose=TRUE)\n  \n  # For Units\n  unitResultsA1 <- prrCrossReg(altSpec1, \n                             subset(allTrans, transType == 'sale' &\n                                      PropertyType == 'Unit' & \n                                      YT_unit_postCode == 1),\n                             subset(allTrans, transType == 'rent' &\n                                      PropertyType == 'Unit' & \n                                      YT_unit_postCode == 1),\n                             verbose=TRUE)\n  unitResultsA2 <- prrCrossReg(altSpec2, \n                             subset(allTrans, transType == 'sale' &\n                                      PropertyType == 'Unit' & \n                                      YT_unit_postCode == 1),\n                             subset(allTrans, transType == 'rent' &\n                                      PropertyType == 'Unit' & \n                                      YT_unit_postCode == 1),\n                             verbose=TRUE)\n  \n  # Extract vales\n  crmAltValues1 <- rbind(houseResultsA1$results, unitResultsA1$results)\n  crmAltValues2 <- rbind(houseResultsA2$results, unitResultsA2$results)\n  \n  # Calculate the ratio\n  crmAltValues1$prRatio <- crmAltValues1$Price / (crmAltValues1$Rent * 52 / 12)\n  crmAltValues2$prRatio <- crmAltValues2$Price / (crmAltValues2$Rent * 52 / 12)\n  \n  a1Diff <- crmValues$prRatio - crmAltValues1$prRatio\n  a2Diff <- crmValues$prRatio - crmAltValues2$prRatio\n  \n  summary(a1Diff)\n  summary(a2Diff)\n  \n ## Make Comparisons\n  \n  # Add values to full dataset\n  allTrans$prRatio <- crmValues$prRatio[match(allTrans$UID, crmValues$UID)]\n  xTrans <- subset(allTrans, !is.na(prRatio))\n  xTrans$pr1 <- crmAltValues1$prRatio[match(xTrans$UID, crmAltValues1$UID)]\n  xTrans$pr2 <- crmAltValues2$prRatio[match(xTrans$UID, crmAltValues2$UID)]\n  \n  # Make Comparison plots\n  plot(tapply(xTrans$prRatio, xTrans$transQtr, median), type='l', col=2, lwd=3,\n       xlab='Quarter', ylab='PRR')\n  lines(tapply(xTrans$pr1, xTrans$transQtr, median), type='l', col=1, lwd=1)\n  lines(tapply(xTrans$pr2, xTrans$transQtr, median), type='l', col=4, lwd=1)\n  legend('bottomleft', c(\"Main\", 'Alt1', 'Alt2'), col=c(2,1,4), lwd=c(3,1,1))\n  \n ## Clean up memory\n  rm(unitResultsA1, unitResultsA2, houseResultsA1, houseResultsA2)\n  rm(crmAltValues1, crmAltValues2); gc()\n  \n } else {\n \n   \n   allTrans$rent <- crmValues$Rent[match(allTrans$UID, crmValues$UID)]\n   allTrans$price <- crmValues$Price[match(allTrans$UID, crmValues$UID)]\n   allTrans$prRatio <- crmValues$prRatio[match(allTrans$UID, crmValues$UID)]\n   allTrans$yield <- crmValues$yield[match(allTrans$UID, crmValues$UID)]\n   \n   xTrans <- subset(allTrans, !is.na(prRatio)) \n       \n }\n\n### Output raw results ---------------------------------------------------------\n  \n  write.csv(xTrans, paste0(dataPath, 'rawResults.csv'), row.names=FALSE)\n    \n### Break down results by dimensions -------------------------------------------\n  \n ## Global\n  \n  # Basic\n  glob <- prrTrender(list('transYear', 'transQtr', 'transMonth'), xData=xTrans)\n  globY <- glob$transYear\n  globQ <- glob$transQtr\n  \n  # By Use\n  globBU <- prrTrender(list('transYear', 'transQtr', 'transMonth'),\n                       xData=xTrans, byUse=TRUE)\n  globBUY <- globBU$transYear\n  globBUQ <- globBU$transQtr\n  \n  # By use weighted\n  globBUW <- prrTrender(list('transYear', 'transQtr', 'transMonth'),\n                        xData=xTrans, byUse=TRUE, weighted=TRUE)\n  globBUWY <- globBUW$transYear\n  globBUWQ <- globBUW$transQtr\n  \n ## All lgas \n  \n  # Basic\n lgaY <- prrTrender('transYear', xData=xTrans, geog='lga', geogName='all')\n lgaQ <- prrTrender('transQtr', xData=xTrans, geog='lga', geogName='all')\n  \n  # By Use\n lgaYU <- prrTrender('transYear', xData=xTrans, geog='lga', \n                      geogName='all', byUse=TRUE)\n lgaQU <- prrTrender('transQtr', xData=xTrans, geog='lga', \n                      geogName='all', byUse=TRUE)\n  \n  # By use weighted\n lgaYUW <- prrTrender('transYear', xData=xTrans, geog='lga',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n lgaQUW <- prrTrender('transQtr', xData=xTrans, geog='lga',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n  \n ## All SLA1s \n  \n  # Basic\n  slaY <- prrTrender('transYear', xData=xTrans, geog='sla1', geogName='all')\n  slaQ <- prrTrender('transQtr', xData=xTrans, geog='sla1', geogName='all')\n  \n  # By Use\n  slaYU <- prrTrender('transYear', xData=xTrans, geog='sla1', \n                      geogName='all', byUse=TRUE)\n  slaQU <- prrTrender('transQtr', xData=xTrans, geog='sla1', \n                      geogName='all', byUse=TRUE)\n  \n  # By use weighted\n  slaYUW <- prrTrender('transYear', xData=xTrans, geog='sla1',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n  slaQUW <- prrTrender('transQtr', xData=xTrans, geog='sla1',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n  \n  ## All PostCodes \n  \n  # Basic\n  pcY <- prrTrender('transYear', xData=xTrans, geog='postCode', geogName='all')\n  pcQ <- prrTrender('transQtr', xData=xTrans, geog='postCode', geogName='all')\n  \n  # By Use\n  pcYU <- prrTrender('transYear', xData=xTrans, geog='postCode', \n                      geogName='all', byUse=TRUE)\n  pcQU <- prrTrender('transQtr', xData=xTrans, geog='postCode', \n                      geogName='all', byUse=TRUE)\n  \n  # By use weighted\n  pcYUW <- prrTrender('transYear', xData=xTrans, geog='postCode',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n  pcQUW <- prrTrender('transQtr', xData=xTrans, geog='postCode',\n                       geogName='all', byUse=TRUE, weighted=TRUE)\n  \n  ## All Suburbs\n  \n  # Basic\n  subY <- prrTrender('transYear', xData=xTrans, geog='suburb', geogName='all')\n  subQ <- prrTrender('transQtr', xData=xTrans, geog='suburb', geogName='all')\n  \n  # By Use\n  subYU <- prrTrender('transYear', xData=xTrans, geog='suburb', \n                     geogName='all', byUse=TRUE)\n  subQU <- prrTrender('transQtr', xData=xTrans, geog='suburb', \n                     geogName='all', byUse=TRUE)\n  \n  # By use weighted\n  subYUW <- prrTrender('transYear', xData=xTrans, geog='suburb',\n                      geogName='all', byUse=TRUE, weighted=TRUE)\n  subQUW <- prrTrender('transQtr', xData=xTrans, geog='suburb',\n                      geogName='all', byUse=TRUE, weighted=TRUE)\n\n### Save Workspace -------------------------------------------------------------\n  \n  save.image(paste0(dataPath, 'prrWrkspc.RData'))\n  save(globY, globQ, globBUY, globBUQ, globBUWY, globBUWQ, \n      lgaY, lgaQ, lgaYU, lgaQU, lgaYUW, lgaQUW,\n      slaY, slaQ, slaYU, slaQU, slaYUW, slaQUW,\n      pcY, pcQ, pcYU, pcQU, pcYUW, pcQUW,\n      subY, subQ, subYU, subQU, subYUW, subQUW,\n      subShp, lgaShp, sla1Shp, postCodeShp, xTrans,\n      file = paste0(dataPath, 'plotObjs.rData'))\n  \n",
    "created" : 1456289403093.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3510465094",
    "id" : "5DC54014",
    "lastKnownWriteTime" : 1456289522,
    "path" : "~/Documents/R_Workspace/ausPropMrkt/ausProperty_teaser/teaserAnalysis.R",
    "project_path" : "ausProperty_teaser/teaserAnalysis.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}